<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
      <!-- 引入外部的属性文件 -->
      <context:property-placeholder location="classpath:/jdbc.properties"/>
      
<!--       <context:component-scan base-package="cn.edu.tju.scs.Account"></context:component-scan> -->
      
      <!-- 配置 c3p0 连接池 -->
      <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
          <property name="driverClass" value="${jdbc.driverClass}"></property>
          <property name="jdbcUrl" value="${jdbc.url}"></property>
          <property name="user" value="${jdbc.username}"></property>
          <property name="password" value="${jdbc.password}"></property>
      </bean>
      
      <!-- 配置 服务层 Service -->
      <bean id="accountService" class="cn.edu.tju.scs.Account.demo2.AccountServiceImp">
         <property name="accountDao" ref="accountDao"></property>
      </bean>
      
      <!-- 配置 Dao 层 -->
      <bean id="accountDao" class="cn.edu.tju.scs.Account.demo2.AccountDaoImp">
          <property name="dataSource" ref="dataSource"></property>
      </bean>
      
      
      <!--  配置事务管理器 -->
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"></property>
      </bean>
      
      <!-- 配置业务层的代理 :可以对我们的service进行增强-->
      <bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
          <!-- 配置目标对象 -->
          <property name="target" ref="accountService"></property>
          <!-- 注入事务管理器 -->
          <property name="transactionManager" ref="transactionManager"></property>
          <!-- 注入事务的属性 -->
          <property name="transactionAttributes">
              <props>
                <!-- 
                prop 的格式
                      * PROPAGATION：事务的传播行为
                      * ISOLATION ：事务的隔离级别
                      * readOnly ：只读（事务不可以进行修改性的操作，包括修改，插入，删除）
                      * -Exception：发生哪些异常回滚事务
                      * +Exception：发生哪些异常不会滚事务
                 --> 
<!--                 <prop key="transfer">PROPAGATION_REQUIRED</prop> -->
<!--                 <prop key="transfer">PROPAGATION_REQUIRED,readOnly</prop> -->
                <prop key="transfer">PROPAGATION_REQUIRED,+java.lang.ArithmeticException</prop>
              </props>
               
          </property>
      </bean>
      
      

 </beans>
